@startuml
actor Administrador
actor Estudiante
actor Profesor

participant "Gestión Académica" as GA
participant "Base de Datos" as BD

== Gestión de Estudiantes ==
Administrador -> GA : crearEstudiante(nombre, documento, email)
GA -> BD : guardarEstudiante()
BD --> GA : confirmación
GA --> Administrador : Estudiante creado

Administrador -> GA : verEstudiante(documento)
GA -> BD : buscarEstudiante()
BD --> GA : datos del estudiante
GA --> Administrador : muestra datos

Administrador -> GA : actualizarEstudiante(documento, nuevosDatos)
GA -> BD : actualizarDatos()
BD --> GA : confirmación
GA --> Administrador : Estudiante actualizado

Administrador -> GA : eliminarEstudiante(documento)
GA -> BD : eliminarRegistro()
BD --> GA : confirmación
GA --> Administrador : Estudiante eliminado

Estudiante -> GA : inscribirseEnCurso(idCurso)
GA -> BD : verificarDisponibilidad()
BD --> GA : confirmación
GA -> BD : registrarInscripción()
BD --> GA : inscripción exitosa
GA --> Estudiante : confirmación

== Gestión de Cursos ==
Administrador -> GA : crearCurso(nombre, creditos, departamento)
GA -> BD : guardarCurso()
BD --> GA : confirmación
GA --> Administrador : Curso creado

Administrador -> GA : listarCursos()
GA -> BD : consultarCursos()
BD --> GA : lista de cursos
GA --> Administrador : muestra lista

Administrador -> GA : actualizarCurso(idCurso, nuevosDatos)
GA -> BD : actualizarCurso()
BD --> GA : confirmación
GA --> Administrador : Curso actualizado

Administrador -> GA : eliminarCurso(idCurso)
GA -> BD : eliminarCurso()
BD --> GA : confirmación
GA --> Administrador : Curso eliminado

Administrador -> GA : asignarProfesor(idCurso, idProfesor)
GA -> BD : verificarDisponibilidadProfesor()
BD --> GA : disponible
GA -> BD : registrarAsignación()
BD --> GA : asignación confirmada
GA --> Administrador : Profesor asignado

Profesor -> GA : listarCursosAsignados()
GA -> BD : consultarAsignaciones()
BD --> GA : lista de cursos
GA --> Profesor : muestra cursos

== Gestión de Profesores ==
Administrador -> GA : crearProfesor(nombre, documento, especialidad)
GA -> BD : guardarProfesor()
BD --> GA : confirmación
GA --> Administrador : Profesor creado

Administrador -> GA : verProfesor(documento)
GA -> BD : buscarProfesor()
BD --> GA : datos del profesor
GA --> Administrador : muestra datos

Administrador -> GA : actualizarProfesor(documento, nuevosDatos)
GA -> BD : actualizarDatos()
BD --> GA : confirmación
GA --> Administrador : Profesor actualizado

Administrador -> GA : eliminarProfesor(documento)
GA -> BD : eliminarRegistro()
BD --> GA : confirmación
GA --> Administrador : Profesor eliminado

Profesor -> GA : asignarNotas(idCurso, documento, nota)
GA -> BD : verificarInscripción()
BD --> GA : inscrito
GA -> BD : guardarNota()
BD --> GA : nota guardada
GA --> Profesor : confirmación

== Gestión de Departamentos ==
Administrador -> GA : crearDepartamento(nombre)
GA -> BD : guardarDepartamento()
BD --> GA : confirmación
GA --> Administrador : Departamento creado

Administrador -> GA : verDepartamento(idDepartamento)
GA -> BD : buscarDepartamento()
BD --> GA : datos del departamento
GA --> Administrador : muestra datos

Administrador -> GA : actualizarDepartamento(idDepartamento, nuevosDatos)
GA -> BD : actualizarDatos()
BD --> GA : confirmación
GA --> Administrador : Departamento actualizado

Administrador -> GA : eliminarDepartamento(idDepartamento)
GA -> BD : eliminarRegistro()
BD --> GA : confirmación
GA --> Administrador : Departamento eliminado

Administrador -> GA : listarCursosDepartamento(idDepartamento)
GA -> BD : consultarCursos()
BD --> GA : lista de cursos
GA --> Administrador : muestra lista

@enduml